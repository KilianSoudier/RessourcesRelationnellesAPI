// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RessourcesRelationnellesAPI.Models;

#nullable disable

namespace RessourcesRelationnellesAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230326132511_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Categorie_Ressource", b =>
                {
                    b.Property<int>("id_categorie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_categorie"));

                    b.Property<string>("nom_categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_categorie");

                    b.ToTable("Categorie_Ressources");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Chat", b =>
                {
                    b.Property<long>("id_chat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_chat"));

                    b.Property<DateTime>("date_chat")
                        .HasColumnType("datetime2");

                    b.Property<long>("jeuid_ressource")
                        .HasColumnType("bigint");

                    b.Property<string>("message_chat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("utilisateurid_user")
                        .HasColumnType("bigint");

                    b.HasKey("id_chat");

                    b.HasIndex("jeuid_ressource");

                    b.HasIndex("utilisateurid_user");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Commentaire", b =>
                {
                    b.Property<long>("id_Commentaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_Commentaire"));

                    b.Property<string>("commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("commentaire_parentid_Commentaire")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("date_commentaire")
                        .HasColumnType("datetime2");

                    b.Property<long>("ressourcesid_ressource")
                        .HasColumnType("bigint");

                    b.Property<long>("utilisateurid_user")
                        .HasColumnType("bigint");

                    b.HasKey("id_Commentaire");

                    b.HasIndex("commentaire_parentid_Commentaire");

                    b.HasIndex("ressourcesid_ressource");

                    b.HasIndex("utilisateurid_user");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Langue", b =>
                {
                    b.Property<int>("id_langue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_langue"));

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_langue");

                    b.ToTable("Langues");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Partager", b =>
                {
                    b.Property<long>("id_Partager")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_Partager"));

                    b.Property<long>("Utilisateurid_user")
                        .HasColumnType("bigint");

                    b.Property<long>("ressourcesid_ressource")
                        .HasColumnType("bigint");

                    b.HasKey("id_Partager");

                    b.HasIndex("Utilisateurid_user");

                    b.HasIndex("ressourcesid_ressource");

                    b.ToTable("Partager");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Relation_Utilisateurs", b =>
                {
                    b.Property<long>("id_Relation_Utilisateurs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_Relation_Utilisateurs"));

                    b.Property<int>("Type_Relationid_Type_Relation")
                        .HasColumnType("int");

                    b.Property<bool>("relation_Confirmee")
                        .HasColumnType("bit");

                    b.Property<long>("utilisateur_vouluid_user")
                        .HasColumnType("bigint");

                    b.Property<long>("utilisateurid_user")
                        .HasColumnType("bigint");

                    b.HasKey("id_Relation_Utilisateurs");

                    b.HasIndex("Type_Relationid_Type_Relation");

                    b.HasIndex("utilisateur_vouluid_user");

                    b.HasIndex("utilisateurid_user");

                    b.ToTable("Relation_Utilisateurs");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Ressources", b =>
                {
                    b.Property<long>("id_ressource")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_ressource"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age_minimum")
                        .HasColumnType("int");

                    b.Property<long>("compteur_vues")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("date_moderation")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("langueid_langue")
                        .HasColumnType("int");

                    b.Property<string>("titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("validation_moderation")
                        .HasColumnType("bit");

                    b.HasKey("id_ressource");

                    b.HasIndex("langueid_langue");

                    b.ToTable("Ressources");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ressources");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Trier_Ressources_Categories", b =>
                {
                    b.Property<int>("id_trier_categories")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_trier_categories"));

                    b.Property<int>("Categorie_Ressourceid_categorie")
                        .HasColumnType("int");

                    b.Property<long>("Ressourcesid_ressource")
                        .HasColumnType("bigint");

                    b.HasKey("id_trier_categories");

                    b.HasIndex("Categorie_Ressourceid_categorie");

                    b.HasIndex("Ressourcesid_ressource");

                    b.ToTable("Trier_Ressources_Categories");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Type_Relation", b =>
                {
                    b.Property<int>("id_Type_Relation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Type_Relation"));

                    b.Property<string>("designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Type_Relation");

                    b.ToTable("Type_Relations");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Type_Utilisateurs", b =>
                {
                    b.Property<int>("id_type_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_type_user"));

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_type_user");

                    b.ToTable("Type_Utilisateurs");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Utilisateurs", b =>
                {
                    b.Property<long>("id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id_user"));

                    b.Property<int>("Type_Utilisateurid_type_user")
                        .HasColumnType("int");

                    b.Property<bool>("accord_confidentialite")
                        .HasColumnType("bit");

                    b.Property<DateTime>("date_accord_confidentialite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_naissance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_validation_rgpd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("derniere_date_connexion")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("langueid_langue")
                        .HasColumnType("int");

                    b.Property<string>("mdp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_jeune_fille")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero_telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pseudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("validation_rgpd")
                        .HasColumnType("bit");

                    b.HasKey("id_user");

                    b.HasIndex("Type_Utilisateurid_type_user");

                    b.HasIndex("langueid_langue");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Image", b =>
                {
                    b.HasBaseType("RessourcesRelationnellesAPI.Models.Ressources");

                    b.Property<float>("taille")
                        .HasColumnType("real");

                    b.ToTable("Ressources", t =>
                        {
                            t.Property("taille")
                                .HasColumnName("Image_taille");
                        });

                    b.HasDiscriminator().HasValue("Image");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Jeu", b =>
                {
                    b.HasBaseType("RessourcesRelationnellesAPI.Models.Ressources");

                    b.Property<float>("taille")
                        .HasColumnType("real");

                    b.Property<bool>("test")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Jeu");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Texte", b =>
                {
                    b.HasBaseType("RessourcesRelationnellesAPI.Models.Ressources");

                    b.Property<float>("taille")
                        .HasColumnType("real");

                    b.ToTable("Ressources", t =>
                        {
                            t.Property("taille")
                                .HasColumnName("Texte_taille");
                        });

                    b.HasDiscriminator().HasValue("Texte");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Video", b =>
                {
                    b.HasBaseType("RessourcesRelationnellesAPI.Models.Ressources");

                    b.Property<float>("taille")
                        .HasColumnType("real");

                    b.ToTable("Ressources", t =>
                        {
                            t.Property("taille")
                                .HasColumnName("Video_taille");
                        });

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Chat", b =>
                {
                    b.HasOne("RessourcesRelationnellesAPI.Models.Jeu", "jeu")
                        .WithMany()
                        .HasForeignKey("jeuid_ressource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Utilisateurs", "utilisateur")
                        .WithMany()
                        .HasForeignKey("utilisateurid_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jeu");

                    b.Navigation("utilisateur");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Commentaire", b =>
                {
                    b.HasOne("RessourcesRelationnellesAPI.Models.Commentaire", "commentaire_parent")
                        .WithMany()
                        .HasForeignKey("commentaire_parentid_Commentaire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Ressources", "ressources")
                        .WithMany()
                        .HasForeignKey("ressourcesid_ressource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Utilisateurs", "utilisateur")
                        .WithMany()
                        .HasForeignKey("utilisateurid_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("commentaire_parent");

                    b.Navigation("ressources");

                    b.Navigation("utilisateur");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Partager", b =>
                {
                    b.HasOne("RessourcesRelationnellesAPI.Models.Utilisateurs", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("Utilisateurid_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Ressources", "ressources")
                        .WithMany()
                        .HasForeignKey("ressourcesid_ressource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");

                    b.Navigation("ressources");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Relation_Utilisateurs", b =>
                {
                    b.HasOne("RessourcesRelationnellesAPI.Models.Type_Relation", "Type_Relation")
                        .WithMany()
                        .HasForeignKey("Type_Relationid_Type_Relation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Utilisateurs", "utilisateur_voulu")
                        .WithMany()
                        .HasForeignKey("utilisateur_vouluid_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Utilisateurs", "utilisateur")
                        .WithMany()
                        .HasForeignKey("utilisateurid_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type_Relation");

                    b.Navigation("utilisateur");

                    b.Navigation("utilisateur_voulu");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Ressources", b =>
                {
                    b.HasOne("RessourcesRelationnellesAPI.Models.Langue", "langue")
                        .WithMany()
                        .HasForeignKey("langueid_langue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("langue");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Trier_Ressources_Categories", b =>
                {
                    b.HasOne("RessourcesRelationnellesAPI.Models.Categorie_Ressource", "Categorie_Ressource")
                        .WithMany()
                        .HasForeignKey("Categorie_Ressourceid_categorie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Ressources", "Ressources")
                        .WithMany()
                        .HasForeignKey("Ressourcesid_ressource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie_Ressource");

                    b.Navigation("Ressources");
                });

            modelBuilder.Entity("RessourcesRelationnellesAPI.Models.Utilisateurs", b =>
                {
                    b.HasOne("RessourcesRelationnellesAPI.Models.Type_Utilisateurs", "Type_Utilisateur")
                        .WithMany()
                        .HasForeignKey("Type_Utilisateurid_type_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RessourcesRelationnellesAPI.Models.Langue", "langue")
                        .WithMany()
                        .HasForeignKey("langueid_langue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type_Utilisateur");

                    b.Navigation("langue");
                });
#pragma warning restore 612, 618
        }
    }
}
